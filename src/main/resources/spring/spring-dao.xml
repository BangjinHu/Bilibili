<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
       http://www.springframework.org/schema/mvc
  	   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
  	   http://www.springframework.org/schema/task
       http://www.springframework.org/schema/task/spring-task-3.1.xsd">

    <!-- 此配置文件是整合mybatis的过程 -->
    <!-- 1. 引入数据库配置文件 -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <!--oracle数据库配置文件-->
                <value>classpath:mysql.properties</value>
                <!--redis数据库配置文件-->
                <!-- <value>classpath:redis.properties</value>-->
            </list>
        </property>
        <property name="fileEncoding" value="UTF-8" />
    </bean>

    <!-- 2.数据库连接池，添加数据库连接池改变数据源 -->
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!-- 3. redis数据源 -->
<!--    <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
<!--        <property name="maxIdle" value="${redis.maxIdle}"/>-->
<!--        <property name="maxTotal" value="${redis.maxActive}"/>-->
<!--        <property name="maxWaitMillis" value="${redis.maxWait}"/>-->
<!--        <property name="testOnBorrow" value="${redis.testOnBorrow}"/>-->
<!--    </bean>-->

    <!-- Spring-redis连接池管理工厂 -->
<!--    <bean id="jedisConnectionFactory"-->
<!--          class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"-->
<!--          p:host-name="${redis.host}" p:port="${redis.port}" p:password="${redis.pass}"-->
<!--          p:pool-config-ref="poolConfig"/>-->
<!--    &lt;!&ndash; 使用中间类解决RedisCache.jedisConnectionFactory的静态注入，从而使MyBatis实现第三方缓存 &ndash;&gt;-->
<!--    <bean id="redisCacheTransfer" class="com.hisen.dao.RedisCacheTransfer">-->
<!--        <property name="jedisConnectionFactory" ref="jedisConnectionFactory"/>-->
<!--    </bean>-->

    <!-- 4. 配置SqlSessionFactory对象 -->
    <!-- spring和MyBatis整合，不需要在mybatis的配置文件中写每个entity的映射文件-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 注入数据库连接池 -->
        <property name="dataSource" ref="dataSource"/>
        <!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!-- 扫描entity包 使用别名 -->
        <property name="typeAliasesPackage" value="com.bilibili.cn.entity"/>
        <!-- 扫描sql配置文件:mapper需要的xml文件 -->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>

    <!-- 5. 配置扫描mapper接口包，动态实现mappper接口，注入到spring容器中 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- 注入sqlSessionFactory -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 给出需要扫描mapper接口包 -->
        <property name="basePackage" value="com.bilibili.cn.mapper"/>
    </bean>
</beans>